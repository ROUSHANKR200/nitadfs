#include <stdio.h>
#define MAX 100

// Global variables for queue and front/rear
int queue[MAX];
int front = -1, rear = -1;

// Function to enqueue an element into the queue
void enqueue(int value) {
    if (rear == MAX - 1) {
        printf("Queue Overflow\n");
    } else {
        if (front == -1) // Initialize front if the queue was empty
            front = 0;
        queue[++rear] = value;
        printf("Enqueued %d into the queue\n", value);
    }
}

// Function to dequeue an element from the queue
void dequeue() {
    if (front == -1 || front > rear) {
        printf("Queue Underflow\n");
        front = rear = -1; // Reset queue when empty
    } else {
        printf("Dequeued %d from the queue\n", queue[front++]);
    }
}

// Function to display the queue elements
void display() {
    if (front == -1 || front > rear) {
        printf("Queue is empty\n");
    } else {
        printf("Queue elements are:\n");
        for (int i = front; i <= rear; i++) {
            printf("%d ", queue[i]);
        }
        printf("\n");
    }
}

// Main function
int main() {
    int choice, value;
    while (1) {
        printf("\nQueue Operations:\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                printf("Enter the value to enqueue: ");
                scanf("%d", &value);
                enqueue(value);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid choice! Please try again.\n");
        }
    }
    return 0;
}
